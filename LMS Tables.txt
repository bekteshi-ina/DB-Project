CREATE DATABASE LMS;
use LMS;

CREATE TABLE IF NOT EXISTS User (
    user_id  INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(16) NOT NULL,
    last_name VARCHAR(16),
    account_type VARCHAR(16) NOT NULL,
    email VARCHAR(32),
    date_of_birth DATETIME,
    date_of_creation DATETIME NOT NULL,
    last_loggedIn  DATETIME NOT NULL
 );

CREATE TABLE IF NOT EXISTS Instructor (
  specialization VARCHAR(64),
  inst_id INT,
  FOREIGN KEY (inst_id) REFERENCES User(user_id)
);

CREATE TABLE IF NOT EXISTS Student (
   std_id INT,
   FOREIGN KEY (std_id) references User (user_id)
 );

CREATE TABLE IF NOT EXISTS Admin(
   admin_id INT PRIMARY KEY,
   FOREIGN KEY (admin_id) references User (user_id)
 );

 CREATE TABLE IF NOT EXISTS Course (
  course_id INT AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(64) NOT NULL,
  description VARCHAR(1024),
  max_participants INT,
  inst_id INT,
  FOREIGN KEY (inst_id) REFERENCES Instructor(inst_id)
);

CREATE TABLE IF NOT EXISTS Enrollment (
     is_paid BOOLEAN,
     std_id INT,
     FOREIGN KEY (std_id) REFERENCES student(std_id),
     course_id INT,
     FOREIGN KEY (course_id) REFERENCES course(course_id)
 );

CREATE TABLE IF NOT EXISTS Certification (
     certification_id INT AUTO_INCREMENT PRIMARY KEY,
     course_id INT, 
     std_id INT,
     discription VARCHAR(512),
     ranking  DECIMAL(5,2) NOT NULL,
     FOREIGN KEY (course_id) REFERENCES Course(course_id),
     FOREIGN KEY (std_id) REFERENCES Student(std_id)
 );

CREATE TABLE IF NOT EXISTS Assignment(
    assig_id INT PRIMARY KEY AUTO_INCREMENT,
    deadline DATETIME NOT NULL,
    assig_info TEXT NOT NULL,
    upload_date DATETIME NOT NULL,
    course_id INT,
    FOREIGN KEY (course_id) REFERENCES Course(course_id)
 );

CREATE TABLE IF NOT EXISTS Submission(
   sub_id INT PRIMARY KEY AUTO_INCREMENT,
   submission_date DATETIME NOT NULL,
   submission_file TEXT NOT NULL,
   std_id INT NOT NULL,
   assig_id INT NOT NULL,
   FOREIGN KEY (std_id) REFERENCES Student(std_id),
   FOREIGN KEY ( assig_id) REFERENCES Assignment( assig_id)
 );

CREATE TABLE IF NOT EXISTS Schedule(
  schedule_id INT AUTO_INCREMENT PRIMARY KEY,
  start_date date,
  end_date date,
  nr_of_sessions INT,
  session_duration TIME,
  course_id INT,
  FOREIGN KEY(course_id) references Course(course_id)
 );

CREATE TABLE IF NOT EXISTS Content (
  content_id INT AUTO_INCREMENT PRIMARY KEY,
  upload_date datetime NOT NULL,
  update_date datetime NOT NULL,
  content_description TEXT NOT NULL,
  course_id INT,
  FOREIGN KEY(course_id) references Course(course_id)
 );

CREATE TABLE IF NOT EXISTS Discount (
     discount_id INT AUTO_INCREMENT PRIMARY KEY,
     discount_name VARCHAR(32),
     discount_rate DECIMAL(5,2) NOT NULL DEFAULT 0,
     start_date DATETIME,
     end_date DATETIME
 );

CREATE TABLE IF NOT EXISTS Payment ( 
     payment_id INT AUTO_INCREMENT PRIMARY KEY,
     payment_method VARCHAR(16) NOT NULL,
     due_date DATETIME NOT NULL,
     price INT NOT NULL,
     course_id INT,
     discount_id INT,
     FOREIGN KEY (course_id) REFERENCES Course(course_id),
     FOREIGN KEY (discount_id) REFERENCES Discount(discount_id)
 );

-- Inserting data into User table
INSERT INTO User (first_name, last_name, account_type, email, date_of_birth, date_of_creation, last_loggedIn)
VALUES 
  ('John', 'Doe', 'admin', 'john.doe@example.com', '1990-01-15 12:00:00', '2022-01-01 08:00:00', '2022-01-05 15:30:00'),
  ('Jane', 'Smith', 'student', 'jane.smith@example.com', '2006-01-01 10:30:00', '2022-01-02 09:15:00', '2022-01-06 14:45:00'),
  ('Michael', 'Johnson', 'student' ,'michael.j@example.com', '1997-01-01 15:45:00', '2022-01-03 13:30:00', '2022-01-07 11:00:00'),
  ('Emily', 'Williams', 'student', 'emily.w@example.com', '1994-01-01 08:20:00', '2022-01-04 17:45:00', '2022-01-08 10:20:00'),
  ('Sophia', 'Anderson', 'student', 'sophia.a@example.com', '1997-01-01 14:10:00', '2022-01-05 09:30:00', '2022-01-09 12:45:00'),
  ('Adam', 'Brown', 'student', 'adam.b@example.com', '1995-01-01 16:45:00', '2022-01-10 11:15:00', '2022-01-10 16:30:00'),
  ('Mia', 'Miller', 'student', 'mia.m@example.com', '2003-01-01 11:00:00', '2022-01-11 14:00:00', '2022-01-11 15:45:00'),
  ('Ethan', 'Clark', 'student', 'ethan.c@example.com', '1997-01-01 13:15:00', '2022-01-12 08:30:00', '2022-01-12 12:15:00'),
  ('Ava', 'Davis', 'student', 'ava.d@example.com', '1994-01-01 09:00:00', '2022-01-13 10:45:00', '2022-01-13 14:30:00'),
  ('Oliver', 'Garcia', 'student', 'oliver.g@example.com', '1997-01-01 14:30:00', '2022-01-14 12:00:00', '2022-01-14 16:15:00'),
  ('Amelia', 'Hill', 'student', 'amelia.h@example.com', '1996-01-01 10:15:00', '2022-01-15 15:45:00', '2022-01-15 17:30:00'),
  ('Lucas', 'Lee', 'student', 'lucas.l@example.com', '1997-01-01 08:30:00', '2022-01-16 13:00:00', '2022-01-16 14:45:00'),
  ('Emma', 'Smith', 'student', 'emma.smith@example.com', '2004-01-01 00:00:00', '2022-01-22 08:00:00', '2022-01-22 12:00:00'),
  ('James', 'Johnson', 'student', 'james.johnson@example.com', '1997-01-01 00:00:00', '2022-01-20 08:00:00', '2022-01-20 12:00:00'),
  ('Sophia', 'Brown', 'student', 'sophia.brown@example.com', '1995-01-01 00:00:00', '2022-01-26 08:00:00', '2022-01-26 12:00:00'),
  ('Oliver', 'Davis', 'student', 'oliver.davis@example.com', '1994-01-01 00:00:00', '2022-01-21 08:00:00', '2022-01-21 12:00:00'),
  ('Ava', 'Miller', 'student', 'ava.miller@example.com', '1997-01-01 00:00:00', '2022-01-27 08:00:00', '2022-01-27 12:00:00'),
  ('Liam', 'Wilson', 'student', 'liam.wilson@example.com', '1996-01-01 00:00:00', '2022-01-25 08:00:00', '2022-01-25 12:00:00'),
  ('Isabella', 'Moore', 'student', 'isabella.moore@example.com', '1994-01-01 00:00:00', '2022-01-23 08:00:00', '2022-01-23 12:00:00'),
  ('Mia', 'Taylor', 'student', 'mia.taylor@example.com', '1997-01-01 00:00:00', '2022-01-24 08:00:00', '2022-01-24 12:00:00'),
  ('Ella', 'Nelson', 'instructor', 'ella.n@example.com', '1998-07-22 12:45:00', '2022-01-17 09:30:00', '2022-01-17 11:15:00'),
  ('Jackson', 'Owens', 'instructor', 'jackson.o@example.com', '1989-09-01 09:30:00', '2022-01-18 10:45:00', '2022-01-18 12:30:00'),
  ('Avery', 'Evans', 'instructor', 'avery.e@example.com', '1990-04-14 11:45:00', '2022-01-19 14:15:00', '2022-01-19 16:00:00');


-- Inserting data into Instructor table with computer science-related specializations
INSERT INTO Instructor (specialization, inst_id)
SELECT 'Software Development', user_id
FROM User
WHERE account_type = 'instructor' AND first_name = 'Ella';

INSERT INTO Instructor (specialization, inst_id)
SELECT 'Data Structures and Algorithms', user_id
FROM User
WHERE account_type = 'instructor' AND first_name = 'Jackson';

INSERT INTO Instructor (specialization, inst_id)
SELECT 'Web Development', user_id
FROM User
WHERE account_type = 'instructor' AND first_name = 'Avery';


-- Inserting data into Student table
INSERT INTO Student (std_id)
VALUES 
  (2),
  (3),
  (4),
  (5),
  (5),
  (6),
  (7),
  (8),
  (9),
  (10),
  (11),
  (12),
  (13),
  (14),
  (15),
  (16),
  (17),
  (18),
  (19),
  (20);
  

-- Inserting data into Admin table
INSERT INTO Admin (admin_id)
VALUES 
  (1);

-- Inserting data into Course table for Computer Science students
INSERT INTO Course (title, description, max_participants, inst_id)
VALUES 
  ('Introduction to Programming', 'Embark on a journey into the world of programming with our Introduction to Programming course. 
  This beginner-friendly program is crafted for those stepping into the realm of coding for the first time. Covering essential concepts such as variables, control structures, and functions,
  this course provides a solid foundation in programming logic. 
  Delve into hands-on exercises and projects designed to reinforce your understanding of key programming principles. 
  Whether you are looking to kickstart a career in software development or gain a valuable skill set, 
  this course is the gateway to unlocking the fascinating universe of coding.', 10, 21),

  ('Data Structures and Algorithm', 'Dive into the core of computer science with our Data Structures and Algorithms course. 
  This advanced program is tailored for developers seeking to enhance their problem-solving skills and optimize code efficiency. 
  Explore a comprehensive range of data structures, from arrays to trees, and algorithms such as sorting and searching. 
  Learn how to analyze algorithmic complexities and make informed design choices. 
  Through practical exercises and real-world applications, you will gain proficiency in creating scalable and efficient solutions. 
  Elevate your programming prowess and be well-equipped to tackle complex challenges in software development 
  with this in-depth exploration of data structures and algorithms.', 15, 22),

  ('Java', 'Explore the fundamentals of Java programming with our comprehensive course. 
  From basic syntax to advanced concepts like multithreading and exception handling, 
  this course is designed for beginners and aspiring developers. 
  Learn to design and implement Java applications, work with object-oriented principles, and gain hands-on experience with real-world projects. 
  Whether youre aiming to kickstart your programming journey or enhance your skills, this Java course offers a solid 
  foundation for building robust and scalable applications.', 8, 21),

  ('Web Development', 'Embark on a journey into the dynamic world of Web Development with our comprehensive course. 
  This program is crafted for both beginners and intermediate learners, providing a solid foundation in front-end and back-end technologies.
  Dive into HTML, CSS, and JavaScript to build responsive and interactive user interfaces. 
  Explore server-side scripting with frameworks like Node.js and Express, coupled with database management using technologies like MongoDB.
  Delve into the intricacies of RESTful API design and asynchronous programming. 
  Through hands-on projects, you will develop the skills needed to create modern, scalable web applications. 
  Whether you aspire to be a full-stack developer or build your web presence, this course equips you with the tools 
  for success in the ever-evolving field of Web Development.', 9, 23);

-- -- Inserting data into Enrollment table for Computer Science students
INSERT INTO Enrollment (is_paid, std_id, course_id)
VALUES 
	(true, 2, 1),
	(true, 3, 1),
	(false, 4, 1),
	(true, 5, 1),
	(false, 6, 2),
	(false, 7, 2),
	(false, 8, 2),
	(true, 9, 2),
	(true, 10, 3),
	(false,11, 3),
	(true,12, 3),
	(false, 13, 3),
  (true,14, 3),
  (true,15, 3),
	(false,16, 4),
	(true,17, 4),
	(false,18, 4),
	(true,19, 4),
	(true,20, 4);
  
 -- Inserting data into Discount table
INSERT INTO Discount (discount_name, discount_rate, start_date, end_date)
VALUES 
  ('Student Discount', 0.10, '2022-01-15 00:00:00', '2022-02-15 00:00:00'),
  ('Holiday Discount', 0.25, '2022-12-01 00:00:00', '2022-12-31 00:00:00'),
  ('Summer Sale', 0.30, '2022-06-01 00:00:00', '2022-08-31 00:00:00');

-- Inserting data into Payment table
INSERT INTO Payment (payment_method, due_date, price, course_id, discount_id)
VALUES 
  ('Cash', '2022-01-20 00:00:00', 500, 1, 1),
  ('Bank Transfer', '2022-03-05 00:00:00', 600, 2, 3),
  ('Cash', '2022-04-15 00:00:00', 350, 3, 2),
  ('Bank Transfer', '2022-06-10 00:00:00', 550, 4, 1);

-- Inserting data into Certification table
INSERT INTO Certification (course_id, std_id, discription, ranking)
VALUES 
  (1, 2, 'Introduction to Programming', 4.8),
  (1, 3, 'Introduction to Programming', 4.9),
  (1, 4, 'Introduction to Programming', 4.7),
  (1, 5, 'Introduction to Programming', 4.5),
  (2, 6, 'Data Structures and Algorithm', 4.6),
  (2, 7, 'Data Structures and Algorithm', 4.8),
  (2, 8, 'Data Structures and Algorithm', 4.9),
  (2, 9, 'Data Structures and Algorithm', 4.7),
  (3, 10, 'Java', 4.5),
  (3, 11, 'Java', 4.6),
  (3, 12, 'Java', 4.8),
  (3, 13, 'Java', 4.9),
  (3, 14, 'Java', 4.7),
  (3, 15, 'Java', 4.5),
  (4, 16, 'Web Development', 4.6),
  (4, 17, 'Web Development', 5.0),
  (4, 18, 'Web Development', 4.1),
  (4, 19, 'Web Development', 4.5),
  (4, 20, 'Web Development', 4.9);

-- Inserting data into Assignment table
INSERT INTO Assignment (deadline, assig_info, upload_date, course_id)
VALUES 
  ('2022-06-15 23:59:59', 'Assigment file1.txt', '2022-01-15 12:00:00', 1),
  ('2022-02-25 23:59:59', 'Assigment file2.txt', '2022-02-01 10:00:00', 2),
  ('2022-03-20 23:59:59', 'Assigment file3.txt', '2022-02-15 14:30:00', 3),
  ('2022-02-23 23:59:59', 'Assigment file4.txt', '2022-03-01 11:45:00', 4),
  ('2022-03-15 23:59:59', 'Assigment file5.txt', '2022-04-01 09:15:00', 4),
  ('2022-06-05 23:59:59', 'Assigment file6.txt', '2022-05-01 13:30:00', 3),
  ('2022-03-10 23:59:59', 'Assigment file7.txt', '2022-06-01 15:45:00', 2),
  ('2022-07-05 23:59:59', 'Assigment file8.txt', '2022-07-01 12:00:00', 1);
  
-- Inserting data into Submission table
INSERT INTO Submission (submission_date, submission_file, std_id, assig_id)
VALUES 
  ('2022-06-12 23:55:00', 'Submitted file1.txt', 5, 1),
  ('2022-02-23 23:50:00', 'Submitted file2.txt', 6, 2),
  ('2022-03-19 23:45:00', 'Submitted file3.txt', 7, 3),
  ('2022-02-21 23:40:00', 'Submitted file4.txt', 8, 4),
  ('2022-03-14 23:35:00', 'Submitted file5.txt', 9, 5),
  ('2022-06-01 23:30:00', 'Submitted file6.txt', 10, 6),
  ('2022-03-09 23:25:00', 'Submitted file7.txt', 11, 7),
  ('2022-07-03 23:20:00', 'Submitted file8.txt', 12, 8),
  ('2022-06-04 23:15:00', 'Submitted file9.txt', 13, 6),
  ('2022-02-24 23:10:00', 'Submitted file10.txt', 14, 2),
  ('2022-02-21 23:05:00', 'Submitted file11.txt', 6, 4),
  ('2022-03-13 23:00:00', 'Submitted file12.txt', 2, 5),
  ('2023-06-04 22:55:00', 'Submitted file13.txt', 8, 6),
  ('2023-07-04 22:50:00', 'Submitted file14.txt', 10, 8),
  ('2023-02-23 22:45:00', 'Submitted file15.txt', 20, 2);

-- Inserting data into Schedule table
INSERT INTO Schedule (start_date, end_date, nr_of_sessions, session_duration, course_id)
VALUES 
  ('2022-06-10', '2022-08-10', 10, '02:00:00', 1),
  ('2022-02-12', '2022-04-12', 12, '01:30:00', 2),
  ('2022-03-15', '2022-06-15', 8, '02:30:00', 3),
  ('2022-02-18', '2022-04-18', 15, '01:00:00', 4);

-- Inserting data into Content table
INSERT INTO Content (upload_date, update_date, content_description, course_id)
VALUES 
  ('2022-06-11 09:00:00', '2022-07-08 15:30:00', 'Content file1.txt', 1),
  ('2022-02-13 10:30:00', '2022-02-13 09:15:00', 'Content file1.txt', 2),
  ('2022-03-18 08:20:00', '2022-03-18 17:45:00', 'Content file1.txt', 3),
  ('2022-02-22 14:10:00', '2022-02-24 09:30:00', 'Content file1.txt', 4),
  ('2022-05-25 16:45:00', '2022-05-25 15:45:00', 'Content file1.txt', 3),
  ('2022-03-28 13:15:00', '2022-03-28 12:15:00', 'Content file1.txt', 4),
  ('2022-03-04 09:00:00', '2022-03-04 10:45:00', 'Content file1.txt', 2),
  ('2022-07-05 10:45:00', '2022-08-07 14:30:00', 'Content file1.txt', 1),
  ('2022-08-08 08:30:00', '2022-08-08 10:45:00', 'Content file1.txt', 1),
  ('2022-03-26 16:30:00', '2022-03-26 14:45:00', 'Content file1.txt', 3),
  ('2022-03-25 12:00:00', '2022-03-25 16:15:00', 'Content file1.txt', 2),
  ('2022-03-14 17:30:00', '2022-03-14 13:00:00', 'Content file1.txt', 4);



